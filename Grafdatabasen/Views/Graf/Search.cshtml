@{
    ViewBag.Title = "Sök i grafdatabasen";
}

@model Grafdatabasen.ViewModels.SearchViewModel
<style>
    .searchitem {
        font-family:'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        font-size:18px;
        font-style:italic;
        color:green;
        line-height:32px;
            
    }
    .mtlist {
        border:none;
        border-bottom:1px dotted lightgrey;
    }
    #graf {
        position:absolute;
        top:270px;
        left:10px;
    }
        .link {
        stroke: #999;
    }
</style>
<div class="row"><p>&nbsp;</p>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
</div>
<div class="panel-group col-md-6" id="accordion" role="tablist" aria-multiselectable="true">
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingOne">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Enkel sökning
                </a>
            </h4>
        </div>
        <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body">
                <div class="col-md-6" id="enkel">
                    <select id="select2" style="width:300px">
                        <option></option>
                    </select>
                </div>
                @*<div id="searchbutton" class="col-md-1 pull-right">
                    <button class="btn-sm btn-success">Sök</button>
                </div>*@
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingTwo">
            <h4 class="panel-title">
                <a class="collapsed" data-toggle="collapse" data-parent="#accordion" href="#nyfiken" aria-expanded="false" aria-controls="collapseTwo">
                    Nyfiken sökning
                </a>
            </h4>
        </div>
        <div id="nyfiken" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
            <div id="searchPanel" class="panel-body">
                @{
                    List<SelectListItem> lista1 = new List<SelectListItem>();
                    lista1.Add(new SelectListItem { Text = "  --Välj--   ", Value = "0" });
                    lista1.Add(new SelectListItem { Text = "konsulter", Value = "Konsult" });
                    lista1.Add(new SelectListItem { Text = "uppdrag", Value = "Uppdrag" });
                    lista1.Add(new SelectListItem { Text = "företag", Value = "Kund" });
                    lista1.Add(new SelectListItem { Text = "kompetenser", Value = "Kompetens" });
                    List<SelectListItem> lista2 = new List<SelectListItem>();
                    lista2.Add(new SelectListItem { Text = " --Välj-- ", Value = "0" });

                    List<SelectListItem> lista3 = new List<SelectListItem>();
                    lista3.Add(new SelectListItem { Text = " --Välj-- ", Value = "0" });

                    List<SelectListItem> lista4 = new List<SelectListItem>();
                    lista4.Add(new SelectListItem { Text = " --Välj-- ", Value = "0" });

                    List<SelectListItem> lista5 = new List<SelectListItem>();
                    lista5.Add(new SelectListItem { Text = " --Välj-- ", Value = "0" });

                }

                @using (Html.BeginForm())
                {

                    <div class="searchitem"><span>Jag söker </span>@Html.DropDownListFor(m => m.SearchItem1, lista1, new { id = "lista1", @class = "mtlist" })</div>
                    <div class="searchitem" id="som1"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>@Html.DropDownListFor(m => m.SearchItem2, lista2, new { id = "lista2", @class = "mtlist" }) @Html.DropDownListFor(m => m.SearchItem3, lista3, new { id = "lista3", @class = "mtlist" })</div>
                    <div class="searchitem" id="som2"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>@Html.DropDownListFor(m => m.SearchItem4, lista4, new { id = "lista4", @class = "mtlist" }) @Html.DropDownListFor(m => m.SearchItem5, lista5, new { id = "lista5", @class = "mtlist" })</div>
                    <input type="submit" value="Sök" id="searchButton" onclick="location.href='@Url.Action("createSearchString", "Search", null)'" class="btn btn-sm btn-primary" />

                }
            </div>
        </div>
    </div>
</div>
<div id="resultatpanel" class="col-md-6" hidden="hidden">
    <div class="panel panel-default">
        <div class="panel-heading">
            <button type="button" id="close" class="close pull-right" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h3 class="panel-title">Sökresultat</h3>
        </div>
        <div class="panel-body">
            <div id="resultat"></div>
            <button type="button" id="visa" class="btn-sm btn-success pull-right" >Visa graf</button>
        </div>
    </div>
</div>
<div id="graf"></div>

<script src="http://d3js.org/d3.v3.min.js" type="text/javascript"></script>

<script type="text/javascript">
    $(function(){

        var request = ajaxneo4j("match (n)  Where n:Konsult OR n:Uppdrag Unwind labels(n) as l Return distinct n.Namn, l");
        var query, nodTyp;
        
        request.done(makeOptgroup);

        function idIndex(a, id) {
            for (var i = 0; i < a.length; i++) {
                if (a[i].id == id) return i;
            }
            return null;
        }

        $("#select2").select2({
            placeholder: "Sök på Uppdrag | Konsult",
            minimumInputLength: 1,
        })

        $("#select2").change(function () {
            query = $("#select2 option:selected").val();
            search(query);
            $("#graf").html("");
        })

        function makeOptgroup(y) {                
            var optgroup = [];
            y.results[0].data.forEach(function (d) {
                if ($.inArray(d.row[1], optgroup)== -1) {
                    optgroup.push(d.row[1]);
                    $("#select2").append("<optgroup id=" + d.row[1] + " label=" + d.row[1] + "></optgroup>")
                    }
                switch (d.row[1].toString()) {
                    case "Konsult": 
                        $("#Konsult").append("<option> " + d.row[0] + "</option>");
                        break;
                    case "Uppdrag": 
                        $("#Uppdrag").append("<option> " + d.row[0] + "</option>");
                        break;
                    //case Kompetens: 
                    //    $("#Kompetens").append("<option>" + d.row[0] + "</option>");
                    //    break;
                    //case Kund: 
                    //    $("#Kund").append("<option>" + d.row[0] + "</option>");
                    //    break;
                    default: 
                }
            })
        }

        function search(query) {
            var search = ajaxneo4j("match (n)  Where n.Namn = '" + query + "' Return distinct n");
            search.done(presentresult);
            return;
        }

        function presentresult(x){
            var resultatpanel= $("#resultatpanel");
            var nodes = [];
            resultatpanel.show();
            x.results[0].data[0].graph.nodes.forEach(function (n) {
                if (idIndex(nodes, n.id) == null) {
                    var property = [];
                    for (var item in n.properties) {
                        property.push("<br><strong>" + item + ":  </strong>" + n.properties[item]);
                    }
                    var resultat= $("#resultat");
                    resultat.html("<p>" + n.labels[0] + "</br>" + property + "</p>");
                    nodTyp = n.labels[0];
                }
            })
            return;
        }

        $("#close").on('click', function (event) {
            $("#resultatpanel").hide();
            $("#graf").html("");
        });

        $("#headingTwo").on('click', function (event) {
            $("#resultatpanel").hide();
            $("#graf").html("");
        });

        //  Nedan är visualisering av sökresultatet
        $("#visa").on('click', function () {
            if (nodTyp == "Konsult") {
                var graf = ajaxneo4j("match path=(n {Namn:'" + query + "'})-[*1..2]->(m) return path");
            }
            else {
                var graf = ajaxneo4j("match path=(n {Namn:'" + query + "'})-[*1..2]-(m) return path");
            }
            console.log(graf);
            graf.done(displayd3);

            function displayd3(y) {
                var nodes = [], links = [];
                y.results[0].data.forEach(function (row) {
                    row.graph.nodes.forEach(function (n) {
                        if (idIndex(nodes, n.id) == null) {
                            var property = [];
                            for (var item in n.properties) {
                                property.push("<br><strong>" + item + ": </strong>" + n.properties[item]);
                            }
                            nodes.push({ id: n.id, label: n.labels[0], title: n.properties.Namn, props: property });
                        }
                    });
                    links = links.concat(row.graph.relationships.map(function (r) {
                        return { source: idIndex(nodes, r.startNode), target: idIndex(nodes, r.endNode), type: r.type };
                    }));
                });
                var graph = { nodes: nodes, links: links };


                var margin = {top: -5, right: -5, bottom: -5, left: -5};
                var width = 670 - margin.left - margin.right, height = 400- margin.top - margin.bottom;
                var color = d3.scale.category20();

                var svg = d3.select("#graf").append("svg")
                        .attr("width", width + margin.left + margin.right)
                        .attr("height", height + margin.top + margin.bottom)
                        .append("g")
                        .attr("transform", "translate(" + margin.left + "," + margin.right + ")");

                var force = d3.layout.force()
                        .charge(-200)
                        .linkDistance(50)
                        .size([width + margin.left + margin.right, height + margin.top + margin.bottom]);

                force
                    .nodes(graph.nodes)
                    .links(graph.links)
                    .start();

                var container = svg.append("g");

                var link = container.selectAll(".link")
                        .data(graph.links)
                        .enter()
                        .append("line")
                        .attr("class", "link");

                var node = container.selectAll(".node")
                        .data(graph.nodes)
                        .enter().append("g")
                        .call(force.drag);

                node.append("circle")
                    .attr("r", function (d) {
                        var size;
                        switch (d.label) {
                            case "Konsult":
                            case "Uppdrag":
                            case "Kund":
                                radius = 15;
                                break;
                            case "Beställare":
                            case "Uppgift":
                                radius = 5;
                                break;
                            default: radius = 9;
                        }
                        return radius;
                    })
                    .attr("fill", function (d) { return color(d.label); })
                    .attr("class", function (d) { return d.label })
                    .style("stroke", function (d) { return d3.rgb(color(d.label)).darker(); });

                node.append("text")
                    .attr("dx", 2 * radius)
                    .attr("dy", ".35em")
                    .text(function (d) { return d.title });

                force.on("tick", function () {
                    link.attr("x1", function (d) { return d.source.x; })
                        .attr("y1", function (d) { return d.source.y; })
                        .attr("x2", function (d) { return d.target.x; })
                        .attr("y2", function (d) { return d.target.y; });

                    node.attr("transform", function (d) { return "translate(" + d.x + "," + d.y + ")"; });
                });
                node.append("title")
                        .text(function (d) { return d.label; });

                //function zoomed() {
                //    container.attr("transform", "translate(" + d3.event.translate + ")scale(" + d3.event.scale + ")");
                //}
                //function dragstarted(d) {
                //    d3.event.sourceEvent.stopPropagation();
                //    d3.select(this).classed("dragging", true);
                //    force.start();
                //}
                //function dragged(d) {
                //    d3.select(this).attr("cx", d.x = d3.event.x).attr("cy", d.y = d3.event.y);
                //}
                //function dragended(d) {
                //    d3.select(this).classed("dragging", false);
                //}
            }
        })

    });

</script>

